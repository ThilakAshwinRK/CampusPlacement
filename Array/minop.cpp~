/* C++ program to count minimum number of operations
to get the given target array */
#include <bits/stdc++.h>
using namespace std;

// Returns count of minimum operations to covert a
// zero array to target array with increment and
// doubling operations.
// This function computes count by doing reverse
// steps, i.e., convert target to zero array.
int countMinOperations(int target[], int n)
{
    int max1=0;
	for(int i=0;i<n;i++)
	{
           int t=(pow(target[i],1.0/2)+(target[i]%2));
	    max1=max(max1,t);
	    
	}
	return max1+n;
}

/* Driver program to test above functions*/
int main()
{
	 int arr[] = {16, 16, 16};
	int n = sizeof(arr)/sizeof(arr[0]);
	cout << "Minimum number of steps required to "
		"get the given target array is "
		<< countMinOperations(arr, n);
	return 0;
}

